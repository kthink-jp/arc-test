name: hello-php by PHP Composer

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3
    - name: インストールパッケージ
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y curl php-cli php-mbstring git unzip

    - name: インストールComposer
      run: |
       php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
       php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
       php composer-setup.php
       php -r "unlink('composer-setup.php');"
       sudo mv ./composer.phar $(dirname $(which php))/composer && chmod +x "$_"

#     - name: Validate composer.json and composer.lock
#       run: composer validate --strict

#     - name: Cache Composer packages
#       id: composer-cache
#       uses: actions/cache@v3
#       with:
#         path: vendor
#         key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#         restore-keys: |
#           ${{ runner.os }}-php-

#     - name: Install dependencies
#       run: composer install --prefer-dist --no-progress

#     # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
#     # Docs: https://getcomposer.org/doc/articles/scripts.md

    - name: 実行 hello-php
      run: php hello-php.php
